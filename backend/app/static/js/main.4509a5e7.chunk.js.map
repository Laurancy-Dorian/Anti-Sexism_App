{"version":3,"sources":["config/config.js","lib/color-management.js","components/Remarks/Remark.js","components/Remarks/RemarksList.js","components/Remarks/AddRemark.js","containers/HomePage.js","components/Responses/Response.js","components/Responses/ResponsesList.js","components/Responses/AddResponse.js","components/utils/Notification.js","containers/RemarkPage.js","components/Header.js","components/Auth/Login.js","components/Auth/Register.js","components/Admin/AdminPanel.js","components/Admin/RemarkContextLine.js","components/Admin/ManageRemarksContext.js","components/Admin/RemarkLine.js","components/Admin/ManageRemarks.js","components/Admin/ResponseTypeLine.js","components/Admin/ManageResponseTypes.js","App.js","serviceWorker.js","index.js"],"names":["config","lightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g","map","color","toString","Remark","props","fetchNumberComments","fetch","api","data","id_remark","then","response","json","result","setState","nb_comments","length","catch","error","console","log","fetchLocal","element","window","localStorage","getItem","JSON","parse","find","i","componentDidMount","handleClick","event","elem","target","name","array","requestOptions","method","headers","Headers","body","URLSearchParams","redirect","indexOf","push","filter","status","Error","setItem","stringify","handleUpdate","state","seen","suffered","prevProps","this","date","Date","date_remark","getDate","toLocaleString","minimumIntegerDigits","useGrouping","getMonth","getFullYear","getHours","getMinutes","hexcolor","context","color_context","lighterColor","buttonColor","fontColor","replace","substr","style","background","id","className","pseudo_user","name_context","to","description_remark","onClick","nb_seen_remark","nb_suffered_remark","Component","RemarksList","remarks","remark","contextList","c","id_context","key","AddRemark","handleSubmit","preventDefault","description","myHeaders","append","token","urlencoded","afterSubmit","handleChange","value","options","onSubmit","onChange","placeholder","type","HomePage","fetchAllRemarks","content","updateRemark","idRemark","newRemark","fetchAllContexts","componentDidUpdate","submitNewRemark","message","notificationType","notificationHandler","Response","id_response","handleLikeClick","dislike","handleDislikeClick","like","date_response","typeName","emoji","name_response_type","String","fromCodePoint","emoji_response_type","description_response","nb_likes_response","nb_dislikes_response","ResponsesList","responses","responseTypeList","t","id_response_type","AddReponse","responseType","Notification","typesAllowedValues","includes","defaultProps","RemarkPage","fetchRemark","responsesTypeList","notification","fetchResponses","fetchAllResponseTypes","submitNewResponse","updateResponse","idResponse","newResponse","AddResponse","Header","handleSelect","eventKey","handleContext","handleSearch","recherche","handleHomeReturn","user","items","NavDropdown","Item","userdata","toUpperCase","substring","is_admin_user","Navbar","sticky","Nav","Brand","src","width","height","alt","admin","Form","inline","FormControl","onSelect","title","Login","username","password","pathname","Object","keys","field","repeatpassword","errors","split","AdminPanel","link","RemarkContextLine","auth","ManageRemarksContext","contexts","RemarkLine","onDelete","ManageRemarks","ResponseTypeLine","ManageResponseTypes","responseTypesList","RemarkPageRoute","useParams","LogoutPage","removeItem","AdminPage","path","exact","App","updateNotification","filterContext","Register","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4509a5e7.chunk.js","sourcesContent":["const config = {\r\n    \"api\" : \"http://vps685054.ovh.net:8080/api\"\r\n}\r\n\r\nexport default config","\r\n/**\r\n * Return a lighter or darker color\r\n * @param string col    the hex color\r\n * @param number amt    the amount to modify (positive = lighter, negative : darker) 0 <= amt <=255\r\n */\r\nexport function lightenDarkenColor(col,amt) {\r\n    var usePound = false;\r\n\r\n    if (col[0] === \"#\") {\r\n    col = col.slice(1);\r\n    usePound = true;\r\n    }\r\n\r\n    var num = parseInt(col,16);\r\n\r\n    var r = (num >> 16) + amt;\r\n\r\n    if (r > 255) r = 255;\r\n    else if (r < 0) r = 0;\r\n\r\n    var b = ((num >> 8) & 0x00FF) + amt;\r\n\r\n    if (b > 255) b = 255;\r\n    else if (b < 0) b = 0;\r\n\r\n    var g = (num & 0x0000FF) + amt;\r\n\r\n    if (g > 255) g = 255;\r\n    else if (g < 0) g = 0;\r\n\r\n    [r, g, b] = [r,g,b].map(color => color <= 15 ? `0${color.toString(16)}` : color.toString(16));\r\n\r\n\r\n    return (usePound?\"#\":\"\") + r + b + g;\r\n}\r\n\r\n/**\r\n * Return the right contrasted color font for the color in parameter\r\n * ex : if the color is #000, then the font must be white, hence the function will return #FFF\r\n * @param string hexcolor  the color \r\n */\r\nexport function getContrastYIQ(hexcolor){\r\n    hexcolor = hexcolor.replace(\"#\", \"\");\r\n    var r = parseInt(hexcolor.substr(0,2),16);\r\n    var g = parseInt(hexcolor.substr(2,2),16);\r\n    var b = parseInt(hexcolor.substr(4,2),16);\r\n    var yiq = ((r*299)+(g*587)+(b*114))/1000;\r\n    return (yiq >= 128) ? '#000' : '#FFF';\r\n}\r\n","import React, {Component} from 'react'\r\nimport config from \"../../config/config\"\r\nimport PropTypes from 'prop-types'\r\nimport {lightenDarkenColor, getContrastYIQ} from '../../lib/color-management'\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n/**\r\n * Remark Component\r\n */\r\nclass Remark extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            nb_comments: 0,\r\n            seen : false,\r\n            suffered : false\r\n        }\r\n    }\r\n\r\n    fetchNumberComments = () => {\r\n        fetch(config.api + \"/remarks/\" + this.props.data.id_remark + \"/responses\")\r\n            .then(response => response.json())\r\n            .then(result =>  {\r\n                this.setState({\r\n                    nb_comments: result.length,\r\n                })\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    fetchLocal = (element) => {\r\n        if (window.localStorage.getItem(element)) {\r\n            if (JSON.parse(window.localStorage.getItem(element)).find(i => i === this.props.data.id_remark)) {\r\n                this.setState({\r\n                    [element]: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    [element]: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.fetchNumberComments()\r\n        this.fetchLocal(\"seen\")\r\n        this.fetchLocal(\"suffered\")\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.data.id_remark !== this.props.data.id_remark) {\r\n            this.fetchNumberComments()\r\n            this.fetchLocal(\"seen\")\r\n            this.fetchLocal(\"suffered\")\r\n        }        \r\n      }\r\n \r\n\r\n    handleClick = (event) => {\r\n        const elem = event.target.name\r\n\r\n        let array = []\r\n        if (window.localStorage.getItem(elem)) {\r\n            array = JSON.parse(window.localStorage.getItem(elem))\r\n        }\r\n\r\n\r\n        let myHeaders = new Headers();\r\n        let urlencoded = new URLSearchParams();\r\n        let requestOptions = {\r\n            method: '',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n\r\n        if(array.indexOf(this.props.data.id_remark) === -1) {\r\n            array.push(this.props.data.id_remark)\r\n            requestOptions.method = \"PUT\"\r\n        } else {\r\n            array = array.filter(i => i !== this.props.data.id_remark)\r\n            requestOptions.method = \"DELETE\"\r\n        }\r\n        \r\n        \r\n\r\n        fetch(\"http://vps685054.ovh.net:8080/api/remarks/\"+ this.props.data.id_remark + \"/\" + elem, requestOptions)\r\n            .then(response =>  {\r\n                if (response.status !== 200) throw Error (\"Modification non effectuée\")\r\n                window.localStorage.setItem(elem, JSON.stringify(array))\r\n                this.fetchLocal(elem)\r\n                this.props.handleUpdate(this.props.data.id_remark)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() { \r\n        let date = new Date(this.props.data.date_remark)\r\n        date = (date.getDate()).toLocaleString('fr-FR', {minimumIntegerDigits: 2, useGrouping:false}) \r\n                + \"/\" + (1+date.getMonth()).toLocaleString('fr-FR', {minimumIntegerDigits: 2, useGrouping:false}) \r\n                + \"/\" + date.getFullYear() \r\n                + \" à \"\r\n                + (date.getHours()).toLocaleString('fr-FR', {minimumIntegerDigits: 2, useGrouping:false}) \r\n                + \":\" \r\n                + date.getMinutes().toLocaleString('fr-FR', {minimumIntegerDigits: 2, useGrouping:false})\r\n\r\n\r\n        const color = this.props.context ? this.props.context.color_context : \"\"\r\n        const lighterColor = this.props.context ? lightenDarkenColor(color, 200) : \"\"\r\n        const buttonColor = this.props.context ? lightenDarkenColor(color, -50) : \"\"\r\n        const fontColor =  this.props.context ? getContrastYIQ(color) : \"\"\r\n\r\n\r\n        return ( \r\n            <div \r\n                style={{background: lighterColor}} \r\n                id={\"remark-\" + this.props.data.id_remark} \r\n                className=\"remark container\"\r\n                >\r\n\r\n                <div style={{background: color, \"color\": fontColor}} className=\"header-remark row\">\r\n                    <div className=\"remark-user col-4\">\r\n                        <span className=\"mr-1\" >Par { this.props.data.pseudo_user ? this.props.data.pseudo_user : \"Anonyme\" } </span>\r\n                        <i className=\"fas fa-user\"></i>\r\n                    </div>\r\n                    <div className=\"remark-context col-4 text-center\">\r\n                        <i className=\"fas fa-quote-left\"></i>\r\n                        <span className=\"mr-2 ml-2\">{this.props.context ? this.props.context.name_context : \"\"}</span>\r\n                        <i className=\"fas fa-quote-right\"></i>\r\n                    </div>\r\n                    <div className=\"remark-date col-4 text-right\">\r\n                        Le { date } \r\n                    </div>\r\n                </div>\r\n                <div className=\"content-remark\">\r\n                    <Link to={ \"/remarks/\" + this.props.data.id_remark }>\r\n                        <div className=\"description-remark\">\r\n                            { this.props.data.description_remark }\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"remark-buttons container row justify-content-center\">\r\n                        <div className={\"btn btn-group remark-button remark-button-seen row col-12 col-lg-4 ml-md-5 mr-md-5 \" } >\r\n                            <button onClick={this.handleClick} className={\"btn btn-primary col-10 \" + (this.state.seen ? \"clicked\" : \"\")} name=\"seen\" style={this.state.seen ? {} : {background:buttonColor}}>J'ai déjà entendu</button>\r\n                            <button onClick={this.handleClick} className={\"remark-button-number btn btn-light col-2 \" + (this.state.seen ? \"clicked\" : \"\")} name=\"seen\"> { this.props.data.nb_seen_remark } </button>\r\n                        </div>\r\n                        \r\n                        <div className=\"btn btn-group remark-button remark-button remark-button-suffered col-12 col-lg-4 row col ml-md-5 mr-md-5\">\r\n                            <button onClick={this.handleClick} className={\"btn btn-primary col-10 \" + (this.state.suffered ? \"clicked\" : \"\")} name=\"suffered\" style={this.state.suffered ? {} : {background:buttonColor}}>J'ai déjà subi</button>\r\n                            <button onClick={this.handleClick} className={\"remark-button-number btn btn-light col-2 \" + (this.state.suffered ? \"clicked\" : \"\")} name=\"suffered\"> { this.props.data.nb_suffered_remark } </button>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n                \r\n                <div className=\"footer-remark text-right\">\r\n                    <Link to={ \"/remarks/\" + this.props.data.id_remark }>\r\n                        <div>\r\n                                {this.state.nb_comments} <i className=\"fas fa-comments\"></i>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nRemark.propTypes = {\r\n    /** \r\n     * The object containing the data of the remark\r\n     *      data.id_remark              The id of the Remark\r\n     *      data.description_remark     The content of the remark\r\n     *      data.nb_seen_remark         The number of users that declared they have seen a situation like this one\r\n     *      data.nb_suffered_remark     The number of users that declared they have suffered a situation like this one\r\n     *      data.date_remark            The date this remark has been posted\r\n     *      data.pseudo_user            The pseudo of the user who posted this remark, null if anonymous\r\n     *      data.id_context             The id of the context of this remark\r\n     */\r\n    data: PropTypes.shape({\r\n        id_remark: PropTypes.number,\r\n        description_remark: PropTypes.string,\r\n        nb_seen_remark: PropTypes.number,\r\n        nb_suffered_remark: PropTypes.number,\r\n        date_remark: PropTypes.string,\r\n        pseudo_user: PropTypes.string,\r\n        id_context: PropTypes.number\r\n    }),\r\n\r\n    \r\n    /**\r\n     * the Remark context of this remark\r\n     *      id_context\t    number  The id of the context\r\n     *      name_context\tString\tThe name\r\n     *      color_context\tString  The color associated (hex)\r\n     */\r\n    context: PropTypes.shape({\r\n        id_context: PropTypes.number,\r\n        name_context: PropTypes.string,\r\n        color_context: PropTypes.string\r\n    })\r\n}\r\n\r\nexport default Remark;","import React, {Component} from 'react'\r\nimport Remark from './Remark'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * A list of Remarks\r\n */\r\nclass RemarksList extends Component {\r\n    render() { \r\n        const remarks = this.props.remarks.map(remark => {\r\n            const context = this.props.contextList.find(c => c.id_context === remark.id_context)\r\n            return (\r\n                <Remark key={remark.id_remark} data={remark} context={ context } handleUpdate={ this.props.handleUpdate } />\r\n            )\r\n        })\r\n\r\n        return ( \r\n            <div className=\"remarks remarks-list container\">\r\n                {remarks}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nRemarksList.propTypes = {\r\n\r\n    /** \r\n     * The Array containing the list of remarks\r\n     *      remarks.id_remark              The id of the Remark\r\n     *      remarks.description_remark     The content of the remark\r\n     *      remarks.nb_seen_remark         The number of users that declared they have seen a situation like this one\r\n     *      remarks.nb_suffered_remark     The number of users that declared they have suffered a situation like this one\r\n     *      remarks.date_remark            The date this remark has been posted\r\n     *      remarks.pseudo_user            The pseudo of the user who posted this remark, null if anonymous\r\n     *      remarks.id_context             The id of the context of this remark\r\n     */\r\n    remarks: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id_remark: PropTypes.number,\r\n            description_remark: PropTypes.string,\r\n            nb_seen_remark: PropTypes.number,\r\n            nb_suffered_remark: PropTypes.number,\r\n            date_remark: PropTypes.string,\r\n            pseudo_user: PropTypes.string,\r\n            id_context: PropTypes.number\r\n        }\r\n    )),\r\n\r\n    /**\r\n     * All the Remark contexts\r\n     *      contextList.id_context\t    number  The id of the context\r\n     *      contextList.name_context\tString\tThe name\r\n     *      contextList.color_context\tString  The color associated (hex)\r\n     */\r\n    contextList: PropTypes.arrayOf(PropTypes.shape({\r\n        id_context: PropTypes.number,\r\n        name_context: PropTypes.string,\r\n        color_context: PropTypes.string\r\n    }))\r\n    \r\n}\r\n\r\n\r\nexport default RemarksList;","import React, { Component } from 'react'\r\nimport config from \"../../config/config\"\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n/**\r\n * Form for adding a new Remark\r\n */\r\nclass AddRemark extends Component {\r\n\r\n    static propTypes = {\r\n\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            context: \"\",\r\n            description: \"\"\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (this.state.context !== \"\" && this.state.description !== \"\") {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n            // Get the token if exists\r\n            if (localStorage.getItem(\"auth\")) {\r\n                myHeaders.append(\"Authorization\", \"Bearer \" + JSON.parse(localStorage.getItem(\"auth\")).token);\r\n            }\r\n\r\n            var urlencoded = new URLSearchParams();\r\n            urlencoded.append(\"description_remark\", this.state.description);\r\n            urlencoded.append(\"id_context\", this.state.context);\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: urlencoded,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(config.api + \"/remarks\", requestOptions)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    this.setState({\r\n                        context: \"\",\r\n                        description: \"\"\r\n                    })\r\n                    this.props.afterSubmit(\"Votre Remarque a bien été ajoutée\", \"success\")\r\n                })\r\n                .catch(error => console.log('error', error));\r\n        } else {\r\n            this.props.afterSubmit(\"Veuillez renseigner tous les champs\", \"danger\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const options = this.props.contextList.map(context => {\r\n            return (<option key={context.id_context} style={{ color: context.color_context, background:\"#FFF\" }} value={context.id_context} > {context.name_context} </option>)\r\n        })\r\n        return (\r\n            <div className=\"add-remark container d-flex justify-content-center form-row\">\r\n                <div className=\"d-flex justify-content-start w-100 header\">Ajouter une remarque</div>\r\n                <form className=\"add-remark-form d-flex justify-content-center row col-12\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-row align-items-top col-12 d-flex justify-content-center \">\r\n                    \r\n                        <div className=\"col-sm-12 col-md-4 mx-0\">\r\n                            <select className=\"form-control\" name=\"context\" value={this.state.context} onChange={this.handleChange}>\r\n                                <option value=''>--- Choisissez un contexte ---</option>\r\n                                {options}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-12 col-md-6 px-0 mx-0\">\r\n                            <textarea placeholder=\"Entrez la remarque\" id=\"textarearemark\" className=\"form-control\" name=\"description\" value={this.state.description} onChange={this.handleChange} /> \r\n\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-2 d-flex justify-content-center align-items-center\">\r\n                            <input className=\"form-control\" type=\"submit\" value=\"Envoyer\" />\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddRemark.propTypes = {\r\n    /** \r\n     * Function to execute after sending the form has been submitted\r\n     * @param message the message to print in the ui\r\n     * @param notificationType the type of notification\r\n     */\r\n    afterSubmit: PropTypes.func,\r\n\r\n    /**\r\n     * All the Remark contexts\r\n     *      contextList.id_context\t    number  The id of the context\r\n     *      contextList.name_context\tString\tThe name\r\n     *      contextList.color_context\tString  The color associated (hex)\r\n     */\r\n    contextList: PropTypes.arrayOf(PropTypes.shape({\r\n        id_context: PropTypes.number,\r\n        name_context: PropTypes.string,\r\n        color_context: PropTypes.string\r\n    }))\r\n}\r\nexport default AddRemark;","import React, {Component} from 'react'\r\n\r\nimport RemarksList from '../components/Remarks/RemarksList'\r\nimport AddRemark from '../components/Remarks/AddRemark'\r\n\r\nimport config from '../config/config'\r\n\r\n\r\nclass HomePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            remarks: [],\r\n            contextList : []\r\n        }\r\n    }\r\n    \r\n    fetchAllRemarks = () => {\r\n        const context = this.props.context ? this.props.context : \"\"\r\n        const content = this.props.content ? this.props.content : \"\"\r\n        fetch(config.api + \"/remarks?context=[\" + context + \"]&content=\" + content )\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            this.setState(function(state) {\r\n                return {\r\n                    remarks: result,\r\n                };\r\n            });\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    updateRemark = (idRemark) => {\r\n        console.log(idRemark)\r\n        fetch(config.api + \"/remarks/\" + idRemark)\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            this.setState(function(state) {\r\n                const newState = state.remarks.map(remark => result.find(newRemark => newRemark.id_remark === remark.id_remark) || remark);\r\n                return {\r\n                    remarks: newState\r\n                };\r\n            });\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    fetchAllContexts = () => {\r\n        fetch(config.api + \"/remarks_contexts\")\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            this.setState(function(state) {\r\n                return {\r\n                    remarks: state.remarks,\r\n                    contextList: result\r\n                };\r\n            });\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.fetchAllRemarks()\r\n        this.fetchAllContexts()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if (prevProps.context !== this.props.context || prevProps.content !== this.props.content) {\r\n            this.fetchAllRemarks()\r\n        }\r\n    }\r\n\r\n    submitNewRemark = (message, notificationType) => {\r\n        this.fetchAllRemarks()\r\n        this.props.notificationHandler(message, notificationType)\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"home-page container\">\r\n                <AddRemark afterSubmit={this.submitNewRemark} contextList={this.state.contextList} />\r\n                <RemarksList contextList={this.state.contextList} remarks={this.state.remarks} handleUpdate={this.updateRemark} />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default HomePage;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * Component representing a Response to a Remark\r\n */\r\nclass Response extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            like : false,\r\n            dislike : false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.fetchLocal(\"like\")\r\n        this.fetchLocal(\"dislike\")\r\n    }\r\n\r\n    fetchLocal = (element) => {\r\n        if (window.localStorage.getItem(element)) {\r\n            if (JSON.parse(window.localStorage.getItem(element)).find(i => i === this.props.data.id_response)) {\r\n                this.setState({\r\n                    [element]: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    [element]: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleLikeClick = () => {\r\n        if (this.state.dislike) {\r\n            this.handleClick(\"dislike\")\r\n        }\r\n        this.handleClick(\"like\")\r\n    }\r\n\r\n    handleDislikeClick = (event) => {\r\n        if (this.state.like) {\r\n            this.handleClick(\"like\")\r\n        }\r\n        this.handleClick(\"dislike\")\r\n    }\r\n\r\n    handleClick = (name) => {\r\n        const elem = name\r\n\r\n        let array = []\r\n        if (window.localStorage.getItem(elem)) {\r\n            array = JSON.parse(window.localStorage.getItem(elem))\r\n        }\r\n\r\n\r\n        let myHeaders = new Headers();\r\n        let urlencoded = new URLSearchParams();\r\n        let requestOptions = {\r\n            method: '',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n\r\n        if(array.indexOf(this.props.data.id_response) === -1) {\r\n            array.push(this.props.data.id_response)\r\n            requestOptions.method = \"PUT\"\r\n\r\n        } else {\r\n            array = array.filter(i => i !== this.props.data.id_response)\r\n            requestOptions.method = \"DELETE\"\r\n        }\r\n        \r\n        \r\n        fetch(\"http://vps685054.ovh.net:8080/api/remarks/\"+ this.props.data.id_remark + \"/responses/\" + this.props.data.id_response + \"/\" + elem, requestOptions)\r\n            .then(response =>  {\r\n                if (response.status !== 200) throw Error (\"Modification non effectuée\")\r\n                window.localStorage.setItem(elem, JSON.stringify(array))\r\n                this.fetchLocal(elem)\r\n                this.props.handleUpdate(this.props.data.id_response)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n        \r\n    }\r\n\r\n\r\n    render() { \r\n\r\n        let date = new Date(this.props.data.date_response)\r\n        date = (date.getDate()).toLocaleString('fr-FR', {minimumIntegerDigits: 2, useGrouping:false}) \r\n                + \"/\" + (1+date.getMonth()).toLocaleString('fr-FR', {minimumIntegerDigits: 2, useGrouping:false}) \r\n                + \"/\" + date.getFullYear() \r\n                + \" à \"\r\n                + (date.getHours()).toLocaleString('fr-FR', {minimumIntegerDigits: 2, useGrouping:false}) \r\n                + \":\" \r\n                + date.getMinutes().toLocaleString('fr-FR', {minimumIntegerDigits: 2, useGrouping:false})\r\n\r\n        let typeName = \"\"\r\n        \r\n        let emoji = \"\"\r\n        if (this.props.type) {\r\n            typeName = this.props.type.name_response_type \r\n\r\n            try {\r\n                \r\n                emoji = String.fromCodePoint(this.props.type.emoji_response_type )\r\n            } catch {\r\n                emoji = this.props.type.emoji_response_type\r\n            }\r\n        }\r\n\r\n        \r\n        \r\n\r\n        return ( \r\n            <div id={\"response-\" + this.props.data.id_response} className=\"response container\">\r\n                <div className=\"header-response row\">\r\n                    <div className=\"response-user col-4\">Par { this.props.data.pseudo_user ? this.props.data.pseudo_user : \"Anonyme\" }</div>\r\n                    <div className=\"remark-context col-4 text-center\">\r\n                        <span className=\"mr-2 ml-2 response-type-name\"> { typeName } </span>\r\n                        <span className=\"mr-2 ml-2 response-type-emoji\"> { emoji } </span>\r\n                    </div>\r\n                    <div className=\"response-date col-4 text-right\">Le { date } </div>\r\n                </div>\r\n                <div className=\"content-response\">\r\n                    <div className=\"description-response\">\r\n                        { this.props.data.description_response }\r\n                    </div>\r\n                    <div className=\"remark-buttons container row justify-content-center\">\r\n                        <div className=\"btn btn-group remark-button remark-button-seen row col-12 col-lg-5 ml-md-2 mr-md-2\">\r\n                            <button onClick={this.handleLikeClick} className={\"btn btn-primary col-10  \" + (this.state.like ? \"clicked\" : \"\")} name=\"like\">Pertinent</button>\r\n                            <div onClick={this.handleLikeClick} className={\"remark-button-number btn btn-light col-2 \" + (this.state.like ? \"clicked\" : \"\")} name=\"like\"> { this.props.data.nb_likes_response } </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"btn btn-group remark-button remark-button remark-button-suffered col-12 col-lg-5 row col ml-md-2 mr-md-2\">\r\n                        <button onClick={this.handleDislikeClick} className={\"btn btn-primary col-10 \" + (this.state.dislike ? \"clicked\" : \"\")} name=\"dislike\">Non Pertinent</button>\r\n                            <div onClick={this.handleDislikeClick} className={\"remark-button-number btn btn-light col-2 \" + (this.state.dislike ? \"clicked\" : \"\")} name=\"dislike\"> { this.props.data.nb_dislikes_response } </div>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>                  \r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\n\r\nResponse.propTypes = {\r\n\r\n    /** \r\n     * The object containing the data of the response\r\n     *      data.id_response              The id of the Response\r\n     *      data.description_response     The content of the Response\r\n     *      data.nb_likes_response        The number of users that liked this Response\r\n     *      data.nb_dislikes_response     The number of users that disliked this Response\r\n     *      data.date_remsponse           The date this response has been posted\r\n     *      data.pseudo_user              The pseudo of the user who posted this response, null if anonymous\r\n     *      data.id_responses_type        The id of the type of this response\r\n     */\r\n\r\n    data: PropTypes.shape({\r\n        id_response: PropTypes.number,\r\n        description_response: PropTypes.string,\r\n        nb_likes_response: PropTypes.number,\r\n        nb_dislikes_response: PropTypes.number,\r\n        date_remsponse: PropTypes.string,\r\n        pseudo_user: PropTypes.string,\r\n        id_responses_type: PropTypes.number\r\n    }),\r\n\r\n    type: PropTypes.shape({\r\n        id_response_type: PropTypes.number,\r\n        name_response_type: PropTypes.string,\r\n        emoji_response_type: PropTypes.string\r\n    })\r\n}\r\n \r\nexport default Response;","import React, {Component} from 'react'\r\nimport Response from './Response'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ResponsesList extends Component {\r\n\r\n    render() { \r\n\r\n        const responses = this.props.responses.map(response => {\r\n            const type = this.props.responseTypeList.find(t => t.id_response_type === response.id_response_type)\r\n\r\n            return (\r\n                <Response key={\"response-\" + response.id_response} data={response} type={type} handleUpdate={this.props.handleUpdate}/>\r\n            )\r\n        })\r\n\r\n        return ( \r\n            <div className=\"responses responses-list container\">\r\n                {responses}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\n\r\nResponsesList.propTypes = {\r\n\r\n    /** \r\n     * The Array containing the list of Responses\r\n     *      responses.id_response              The id of the Response\r\n     *      responses.description_response     The content of the Response\r\n     *      responses.nb_likes_response        The number of users that liked this Response\r\n     *      responses.nb_dislikes_response     The number of users that disliked this Response\r\n     *      responses.date_remsponse           The date this response has been posted\r\n     *      responses.pseudo_user              The pseudo of the user who posted this response, null if anonymous\r\n     *      responses.id_responses_type        The id of the type of this response\r\n     */\r\n    responses: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id_response: PropTypes.number,\r\n            description_response: PropTypes.string,\r\n            nb_likes_response: PropTypes.number,\r\n            nb_dislikes_response: PropTypes.number,\r\n            date_remsponse: PropTypes.string,\r\n            pseudo_user: PropTypes.string,\r\n            id_responses_type: PropTypes.number\r\n        })\r\n    ),\r\n\r\n    /**\r\n     * ResponseTypeList \tobject[]\tAn array containing the Responses Types\r\n     *      ResponseTypeList.id_response_type\t    number  The id\r\n     *      ResponseTypeList.name_response_type\t    String\tThe name\r\n     *      ResponseTypeList.emoji_response_type\tString\tThe emoji associated\r\n     */\r\n    responseTypeList: PropTypes.arrayOf(PropTypes.shape({\r\n        id_response_type: PropTypes.number,\r\n        name_response_type: PropTypes.string,\r\n        emoji_response_type: PropTypes.string\r\n    }))\r\n}\r\n\r\n \r\nexport default ResponsesList;","import React, {Component} from 'react'\r\nimport config from \"../../config/config\"\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n/**\r\n * Form for adding a new Remark\r\n */\r\nclass AddReponse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            responseType: \"\",\r\n            description: \"\"\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        if (this.state.responseType !== \"\" && this.state.description !== \"\") {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    \r\n            \r\n            // Get the token if exists\r\n            if (localStorage.getItem(\"auth\")) {\r\n                myHeaders.append(\"Authorization\", \"Bearer \" + JSON.parse(localStorage.getItem(\"auth\")).token);\r\n            }\r\n            \r\n            var urlencoded = new URLSearchParams();\r\n            urlencoded.append(\"description_response\", this.state.description);\r\n            urlencoded.append(\"id_response_type\", this.state.responseType);\r\n    \r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: urlencoded,\r\n                redirect: 'follow'\r\n            };\r\n    \r\n            fetch(config.api + \"/remarks/\" + this.props.idRemark + \"/responses\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState({ \r\n                    context: \"\",\r\n                    description: \"\"\r\n                })\r\n                \r\n                this.props.afterSubmit(\"Votre réponse a bien été envoyée\", \"success\")\r\n            })\r\n            .catch(error =>  {\r\n                console.log(error)\r\n            });\r\n        } else {\r\n            this.props.afterSubmit(\"Veuillez renseigner tous les champs\", \"danger\")\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n\r\n        const options = this.props.responseTypeList.map (type => {\r\n            let emoji = \"\"\r\n            try {\r\n                emoji = String.fromCodePoint(type.emoji_response_type )\r\n            } catch {\r\n                emoji = type.emoji_response_type\r\n            }\r\n\r\n            return( <option key={ type.id_response_type } value= { type.id_response_type } > { type.name_response_type } {emoji} </option> )\r\n        })\r\n\r\n        return (\r\n            <div className=\"add-remark add-response container d-flex justify-content-center form-row\">\r\n                <div className=\"d-flex justify-content-start w-100 header\">Ajouter une réponse</div>\r\n                <form className=\"add-remark-form d-flex justify-content-center row col-12\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-row align-items-top col-12 d-flex justify-content-center \">    \r\n                            <div className=\"col-sm-12 col-md-4 mx-0\">\r\n                                <select className=\"form-control\" name=\"responseType\" value={this.state.responseType} onChange={this.handleChange}>\r\n                                    <option value=''>--- Choisissez un Type de Réponse ---</option>\r\n                                    \r\n                                    { options }\r\n\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            <div className=\"col-sm-12 col-md-6 px-0 mx-0\">\r\n\r\n                                <textarea id=\"textarearesponse\" placeholder=\"Entrez la réponse que vous proposez\" className=\"form-control\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"col-sm-12 col-md-2 d-flex justify-content-center align-items-center\">\r\n                                <input className=\"form-control\" type=\"submit\" value=\"Envoyer\" />\r\n\r\n                            </div>\r\n                        </div>\r\n                    \r\n\r\n                    \r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddReponse.propTypes = {\r\n    /** \r\n     * Function to execute after sending the form has been submitted\r\n     * @param message the message to print in the ui\r\n     * @param notificationType the type of notification\r\n     */\r\n    afterSubmit: PropTypes.func,\r\n    /** The id of the Remark */\r\n    idRemark: PropTypes.number,\r\n\r\n    /**\r\n     * ResponseTypeList \tobject[]\tAn array containing the Responses Types\r\n     *      ResponseTypeList.id_response_type\t    number  The id\r\n     *      ResponseTypeList.name_response_type\t    String\tThe name\r\n     *      ResponseTypeList.emoji_response_type\tString\tThe emoji associated\r\n     */\r\n    responseTypeList: PropTypes.arrayOf(PropTypes.shape({\r\n        id_response_type: PropTypes.number,\r\n        name_response_type: PropTypes.string,\r\n        emoji_response_type: PropTypes.string\r\n    }))\r\n}\r\nexport default AddReponse;","import React, {Component} from \"react\"\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * A Notification component\r\n */\r\nclass Notification extends Component {\r\n    render() {\r\n        const typesAllowedValues = [ \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\" ]\r\n\r\n        const type = typesAllowedValues.includes(this.props.type) ? this.props.type : typesAllowedValues[0]\r\n        \r\n        return (\r\n            <div className={\"notification mx-auto m-2 w-75 alert alert-\" + type}>\r\n                {this.props.content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNotification.propTypes = {\r\n    /** The content of the Notification */\r\n    content : PropTypes.string,\r\n\r\n    /**\r\n     * The type of Notification. \r\n     * AllowedValues = [ \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\" ]\r\n     */\r\n    type: PropTypes.string\r\n}\r\n\r\nNotification.defaultProps = {\r\n    content: \"\",\r\n    type:\"primary\"\r\n}\r\n\r\nexport default Notification","import React, {Component} from 'react'\r\nimport RemarksList from '../components/Remarks/RemarksList'\r\nimport ResponsesList from '../components/Responses/ResponsesList'\r\nimport AddResponse from '../components/Responses/AddResponse'\r\nimport Notification from '../components/utils/Notification'\r\n\r\n\r\nimport config from \"../config/config\"\r\n\r\n\r\nclass RemarkPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            remark: [],\r\n            responses: [],\r\n            contextList: [],\r\n            responsesTypeList: [],\r\n            notification: \"\",\r\n            notificationType : \"warning\"\r\n        }\r\n    }\r\n\r\n    fetchRemark = () => {\r\n        fetch(config.api + \"/remarks/\" + this.props.idRemark)\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            this.setState(function(state) {\r\n                return {\r\n                    remark: result,\r\n                    responses: state.responses,\r\n                    contextList: state.contextList,\r\n                    responsesTypeList: state.responsesTypeList,\r\n                    notification: state.notification,\r\n                    notificationType: state.notificationType\r\n                };\r\n            });\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    fetchResponses = () => {\r\n        fetch(config.api + \"/remarks/\" + this.props.idRemark + \"/responses\")\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            this.setState(function(state) {\r\n                return {\r\n                    remark: state.remark,\r\n                    responses: result,\r\n                    contextList : state.contextList,\r\n                    responsesTypeList: state.responsesTypeList,\r\n                    notification: state.notification,\r\n                    notificationType: state.notificationType\r\n                };\r\n            });\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    fetchAllContexts = () => {\r\n        fetch(config.api + \"/remarks_contexts\")\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            this.setState(function(state) {\r\n                return {\r\n                    remarks: state.remarks,\r\n                    responses: state.responses,\r\n                    contextList: result,\r\n                    responsesTypeList: state.responsesTypeList,\r\n                    notification: state.notification,\r\n                    notificationType: state.notificationType,\r\n                };\r\n            });\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    fetchAllResponseTypes = () => {\r\n        fetch(config.api + \"/responses_types\")\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            this.setState(function(state) {\r\n                return {\r\n                    remarks: state.remarks,\r\n                    responses: state.responses,\r\n                    contextList: state.contextList,\r\n                    responsesTypeList: result,\r\n                    notification: state.notification,\r\n                    notificationType: state.notificationType,\r\n                };\r\n            });\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.fetchRemark()\r\n        this.fetchResponses()\r\n        this.fetchAllContexts()\r\n        this.fetchAllResponseTypes()\r\n    }\r\n\r\n    submitNewResponse = (message, notificationType) => {\r\n        this.setState(function(state) {\r\n            return {\r\n                remark: state.remark,\r\n                responses: state.responses,\r\n                contextList: state.contextList,\r\n                responsesTypeList: state.responsesTypeList,\r\n                notification: message,\r\n                notificationType: notificationType\r\n            };\r\n        });\r\n        this.fetchResponses()\r\n    }\r\n\r\n    updateResponse = (idResponse) => {\r\n        fetch(config.api + \"/remarks/\" + this.props.idRemark + \"/responses/\" + idResponse)\r\n        .then(response => response.json())\r\n        .then(result =>  {\r\n            this.setState(function(state) {\r\n                const newState = state.responses.map(response => result.find(newResponse => newResponse.id_response === response.id_response) || response);\r\n                return {\r\n                    responses: newState\r\n                };\r\n            });\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"remark-page container\">\r\n\r\n               <RemarksList remarks={this.state.remark} contextList={this.state.contextList} handleUpdate={this.fetchRemark}/>\r\n               {this.state.notification.length > 0 ? <Notification type={this.state.notificationType} content={this.state.notification} /> : \"\"}\r\n               <AddResponse idRemark={parseInt(this.props.idRemark)} afterSubmit={this.submitNewResponse} responseTypeList={this.state.responsesTypeList} />\r\n               <ResponsesList responses={this.state.responses} responseTypeList={this.state.responsesTypeList} handleUpdate={this.updateResponse} />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default RemarkPage;","import React, {Component} from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport config from \"../config/config\"\r\nimport {Navbar, Nav, Form, FormControl, NavDropdown} from 'react-bootstrap'\r\n\r\n\r\n\r\n/**\r\n * Header Component\r\n */\r\nclass Header extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { \r\n      contextList: [],\r\n      recherche: \"\"\r\n    }\r\n  }\r\n\r\n\r\n  fetchAllContexts = () => {\r\n    fetch(config.api + \"/remarks_contexts\")\r\n    .then(response => response.json())\r\n    .then(result =>  {\r\n        this.setState(function(state) {\r\n            return {\r\n              contextList: result\r\n            };\r\n        });\r\n    })\r\n    .catch(error => console.log('error', error));\r\n}\r\n\r\n\r\n  componentDidMount = () => {\r\n    this.fetchAllContexts()\r\n  }\r\n\r\n  \r\n  \r\n  handleSelect = (eventKey) => {\r\n    this.props.handleContext(eventKey)\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n        [name] : value\r\n    });\r\n}\r\n\r\n  handleClick = () => {\r\n    this.props.handleSearch(this.state.recherche)\r\n  }\r\n\r\n  handleHomeReturn = () => {\r\n    if (this.props.handleHomeReturn) {\r\n      this.props.handleHomeReturn()\r\n    }\r\n    \r\n  }\r\n\r\n  render(){\r\n    const items = this.state.contextList.map (context => {\r\n      return(  <NavDropdown.Item key={ context.id_context } eventKey= { context.id_context } style={ {color: context.color_context} } >{ context.name_context }</NavDropdown.Item>)\r\n    })\r\n\r\n    let user\r\n\r\n    if (window.localStorage.getItem(\"auth\")) {\r\n      const userdata = JSON.parse(window.localStorage.getItem(\"auth\")).user\r\n      user = (\r\n        <div>\r\n          <span className=\"mr-2\">{\"Bienvenue \" + userdata.pseudo_user[0].toUpperCase() + userdata.pseudo_user.substring(1)}</span> \r\n\r\n          {\r\n              (userdata.is_admin_user) ? \r\n                <Link className=\"mr-2 btn btn-dark\" to=\"/admin\">\r\n                  Panneau d'administration\r\n                </Link>\r\n              :\r\n              \"\"\r\n              }\r\n\r\n          <Link to=\"/logout\" className=\"btn btn-dark\">\r\n            Déconnexion\r\n          </Link>\r\n        </div>\r\n      \r\n      )\r\n    } else {\r\n      user = (\r\n        <Link className=\"btn btn-dark\" to=\"/login\">\r\n          Connexion\r\n        </Link>\r\n      )\r\n    }\r\n    return(\r\n      <div className=\"header-app\">\r\n          <Navbar  className=\"d-flex justify-content-between\" sticky=\"top\">\r\n              <Nav>\r\n                <Link to=\"/\">\r\n                  <Navbar.Brand onClick={this.handleHomeReturn}>\r\n                    <img\r\n                      src=\"/logo2.png\"\r\n                      width=\"30\"\r\n                      height=\"30\"\r\n                      className=\"d-inline-block align-top\"\r\n                      alt=\"React Bootstrap logo\"\r\n                    />\r\n                  </Navbar.Brand>\r\n                </Link>\r\n              </Nav>\r\n              \r\n                {\r\n                  !this.props.admin ?\r\n                    <Nav>\r\n                      <Form inline>\r\n                        <FormControl onChange= { this.handleChange } value={ this.state.recherche } name=\"recherche\" type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <div onClick={ this.handleClick }  className=\"btn btn-dark\">Rechercher</div>\r\n                      </Form>\r\n                      <Nav className=\"d-flex justify-content-center\" onSelect={this.handleSelect}>\r\n                          <NavDropdown title=\"CATEGORIE\">\r\n                            {items}\r\n                          </NavDropdown>\r\n                      </Nav>\r\n                    </Nav>\r\n                  :\r\n                    \"\"\r\n                }\r\n                  \r\n              \r\n              <div className=\"actions-header\">\r\n                <Nav className=\"d-flex justify-content-end\">\r\n                  <div className=\"d-flex flex-row-reverse\">\r\n                    {user}\r\n                  </div>\r\n                    \r\n                </Nav>\r\n              </div>\r\n            </Navbar>\r\n      </div>  \r\n    )\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;","import React, {Component} from 'react'\r\nimport config from \"../../config/config\"\r\n\r\nimport {\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        if (this.state.username !== \"\" && this.state.password !== \"\") {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n            \r\n            var urlencoded = new URLSearchParams();\r\n            urlencoded.append(\"pseudo_user\", this.state.username);\r\n            urlencoded.append(\"password_user\", this.state.password);\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: urlencoded,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(config.api + \"/auth\", requestOptions)\r\n            .then(response => {\r\n                if (response.status === 400) throw Error (\"Nom d'utilisateur et/ou Mot de passe invalides\")\r\n                \r\n                return response.json()\r\n            })\r\n            .then(result => {\r\n                window.localStorage.setItem('auth', JSON.stringify(result));\r\n                this.props.notificationHandler('Bienvenue ' + result.user.pseudo_user, \"success\")               \r\n            })\r\n            .catch(error => {\r\n                this.props.notificationHandler(error.message, \"danger\")               \r\n            });\r\n\r\n            \r\n        } else {\r\n            this.props.notificationHandler('Veuillez compléter tous les champs', 'warning')   \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    render () {\r\n        if (localStorage.getItem(\"auth\")) {\r\n            return <Redirect to={{ pathname: \"/\"}} />\r\n        } \r\n\r\n        return (\r\n            <div className=\"container login\">\r\n                <div className=\"d-flex justify-content-center h-100\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h3>Connexion</h3>\r\n                        </div>\r\n\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-user\"></i></span>\r\n                                    </div>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"Nom d'utilisateur\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username} \r\n                                        onChange={this.handleChange}>\r\n                                    </input>\r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-key\"></i></span>\r\n                                    </div>\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Mot de passe\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChange}>\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Envoyer\" className=\"btn float-right login_btn\"></input>\r\n                                </div>\r\n                                \r\n                            </form>\r\n                        </div>\r\n                       \r\n                        <div className=\"card-footer\">\r\n                            <div className=\"d-flex justify-content-center links\">\r\n                                Vous n'avez pas de compte ? <Link to=\"/register\">Inscrivez-vous</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, {Component} from 'react'\r\nimport config from \"../../config/config\"\r\n\r\nimport {\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            username: \"\",\r\n            password: \"\",\r\n            repeatpassword : \"\"\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        try {\r\n        \r\n            // Check if all fields are filled\r\n            for (const field of Object.keys(this.state)) {\r\n               if (this.state[field].length === 0) throw Error(\"Veuillez compléter tous les champs\")\r\n            }\r\n\r\n            // Check if the two passwords are the same\r\n            if (this.state.password !== this.state.repeatpassword) {\r\n                throw Error('Les deux mots de passes ne correspondent pas')  \r\n            }\r\n\r\n            // Request\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n            var urlencoded = new URLSearchParams();\r\n            urlencoded.append(\"pseudo_user\", this.state.username);\r\n            urlencoded.append(\"password_user\", this.state.password);\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: urlencoded,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            let status = null\r\n            fetch(config.api + \"/users\", requestOptions)\r\n            .then(response => {\r\n                status = response.status                \r\n                return response.json()\r\n            })\r\n            .then(result => {\r\n\r\n                if (status === 409) throw Error(\"Ce nom d'utilisateur est déjà utilisé\")\r\n                if (status === 400) throw Error(result.errors[0].message.split(\" - \")[1])\r\n                if (status !== 201) throw Error(\"Une erreur s'est produite, veuillez réessayer\")\r\n\r\n\r\n                // fetch the token\r\n                fetch(config.api + \"/auth\", requestOptions)\r\n                .then(response => {                   \r\n                    return response.json()\r\n                })\r\n                .then(result => {\r\n                    window.localStorage.setItem('auth', JSON.stringify(result));\r\n                    this.props.notificationHandler('Bienvenue ' + result.user.pseudo_user, \"success\")               \r\n                })\r\n                \r\n                            \r\n            })\r\n            .catch(error => {\r\n                this.props.notificationHandler(error.message, \"danger\")               \r\n            });\r\n    \r\n\r\n        } catch (error) {\r\n            this.props.notificationHandler(error.message, \"warning\")  \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    render () {\r\n        if (localStorage.getItem(\"auth\")) {\r\n            return <Redirect to={{ pathname: \"/\"}} />\r\n        } \r\n\r\n        return (\r\n            <div className=\"container login\">\r\n                <div className=\"d-flex justify-content-center h-100\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h3>Inscription</h3>\r\n                        </div>\r\n\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-user\"></i></span>\r\n                                    </div>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"Nom d'utilisateur\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username} \r\n                                        onChange={this.handleChange}>\r\n                                    </input>\r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-key\"></i></span>\r\n                                    </div>\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Mot de passe\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChange}>\r\n                                    </input>\r\n                                </div>\r\n                                <div className=\"input-group form-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\"><i className=\"fas fa-key\"></i></span>\r\n                                    </div>\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Répéter le Mot de passe\"\r\n                                        name=\"repeatpassword\"\r\n                                        value={this.state.repeatpassword}\r\n                                        onChange={this.handleChange}>\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"submit\" value=\"Envoyer\" className=\"btn float-right login_btn\"></input>\r\n                                </div>\r\n                                \r\n                            </form>\r\n                        </div>\r\n                       \r\n                        <div className=\"card-footer\">\r\n                            <div className=\"d-flex justify-content-center links\">\r\n                                Vous avez déjà un compte ? <Link to=\"/login\">Connectez-vous</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction AdminPanel(props) {\r\n\r\n    const cards = [\r\n        {\r\n            name: \"Gérer les Catégories de Remarques\",\r\n            link: \"/remarkcontext\"\r\n        },\r\n        {\r\n            name: \"Gérer les Types de Réponses\",\r\n            link: \"/responsestypes\"\r\n        },\r\n        {\r\n            name: \"Gérer les remarques\",\r\n            link: \"/remarks\"\r\n        },\r\n    ]\r\n\r\n    const content = cards.map(elem => {\r\n        return (\r\n            <Link to={\"/admin\" + elem.link} key={elem.link} className=\"card col-12 col-md-5 col-lg-5 m-2\" >\r\n                <div className=\"card-body d-flex justify-content-center align-items-center text-center\">\r\n                    <h5 className=\"card-title\">{elem.name}</h5>     \r\n                </div>\r\n            </Link>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"admin container\">\r\n            <div className=\"row  d-flex justify-content-center\">\r\n            {content}\r\n            </div>\r\n        </div>\r\n    )\r\n            \r\n}\r\n\r\nexport default AdminPanel","import React, { Component } from 'react'\r\nimport config from \"../../config/config\"\r\n\r\nclass RemarkContextLine extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            color: \"\"\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            name: this.props.data.name_context,\r\n            color: this.props.data.color_context\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        var myHeaders = new Headers();\r\n\r\n        const auth = JSON.parse(localStorage.getItem(\"auth\"))\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + auth.token);\r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    \r\n\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"name_context\", this.state.name);\r\n        urlencoded.append(\"color_context\", this.state.color);\r\n\r\n        var requestOptions = {\r\n            method: 'PATCH',\r\n            headers: myHeaders,\r\n             body: urlencoded,\r\n             redirect: 'follow'\r\n        };\r\n\r\n        fetch(config.api + \"/remarks_contexts/\" + this.props.data.id_context, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row tableline\">\r\n                        <div className=\"col-2 tablecell\">\r\n                            {this.props.data.id_context}\r\n                        </div>\r\n                        <div className=\"col-4 tablecell\">\r\n                            <input onChange={this.handleChange} value={this.state.name} name={\"name\"}></input>\r\n                        </div>\r\n                        <div className=\"col-3 tablecell\" style={{ background: this.state.color }}>\r\n                            <input onChange={this.handleChange} value={this.state.color} name={\"color\"}></input>\r\n                        </div>\r\n                        <div className=\"col-3 tablecell\">\r\n                            <button className=\"btn btn-light m-1\">Modifier</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n        )\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default RemarkContextLine","import React, { Component } from 'react'\r\nimport config from \"../../config/config\"\r\nimport RemarkContextLine from \"./RemarkContextLine\"\r\n\r\nclass ManageRemarksContext extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contextList: []\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.fetchAllContexts()\r\n    }\r\n\r\n    fetchAllContexts = () => {\r\n        fetch(config.api + \"/remarks_contexts\")\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState(function (state) {\r\n                    return {\r\n                        contextList: result,\r\n                        name: \"\",\r\n                        color: \"\"\r\n                    };\r\n                });\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        var myHeaders = new Headers();\r\n\r\n        const auth = JSON.parse(localStorage.getItem(\"auth\"))\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + auth.token);\r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"name_context\", this.state.name);\r\n        urlencoded.append(\"color_context\", this.state.color);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(config.api + \"/remarks_contexts/\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                this.fetchAllContexts()\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    render() {\r\n        const contexts = this.state.contextList.map(c => {\r\n            return (\r\n                <RemarkContextLine key={c.id_context} data={c} />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\" >\r\n                    <div className=\"row table-dark\">\r\n                        <div className=\"col-12 \">\r\n                            <div className=\"row tableline tableline-header\">\r\n                                <div className=\"col-2 tablecell\">\r\n                                    Id Catégorie\r\n                                </div>\r\n                                <div className=\"col-4 tablecell\">\r\n                                    Nom\r\n                                </div>\r\n                                <div className=\"col-3 tablecell\">\r\n                                    Couleur\r\n                                </div>\r\n                                <div className=\"col-3 tablecell\">\r\n                                    Action\r\n                                </div>\r\n                            </div>\r\n                            {contexts}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"add-remark container d-flex justify-content-center form-row\">\r\n                        <div className=\"d-flex justify-content-start w-100 header\">Ajouter une Catégorie</div>\r\n                        <form className=\"add-remark-form d-flex justify-content-center row col-12\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-row align-items-top col-12 d-flex justify-content-center \">\r\n\r\n                                <label className=\"col-sm-12 col-md-4 mx-0\">\r\n                                    Nom de la catégorie : <br />\r\n                                    <input onChange={this.handleChange} value={this.state.name} name={\"name\"}></input>\r\n                                </label>\r\n\r\n                                <label className=\"col-sm-12 col-md-6 px-0 mx-0\" style={{ background: this.state.color }}>\r\n                                    Couleur de la catégorie : <br />\r\n                                    <input onChange={this.handleChange} value={this.state.color} name={\"color\"}></input>\r\n                                </label>\r\n                                <div className=\"col-sm-12 col-md-2 d-flex justify-content-center align-items-center\">\r\n                                    <input className=\"form-control\" type=\"submit\" value=\"Envoyer\" />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManageRemarksContext","import React, { Component } from 'react'\r\nimport config from \"../../config/config\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass RemarkLine extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            color: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            name: this.props.data.name_context,\r\n            color: this.props.data.color_context\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        var myHeaders = new Headers();\r\n        const auth = JSON.parse(localStorage.getItem(\"auth\"))\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + auth.token);\r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n        \r\n\r\n    }\r\n\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        var myHeaders = new Headers();\r\n\r\n        const auth = JSON.parse(localStorage.getItem(\"auth\"))\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + auth.token);\r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    \r\n\r\n        var requestOptions = {\r\n            method: 'DELETE',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(config.api + \"/remarks/\" + this.props.data.id_remark, requestOptions)\r\n            .then(response =>  {\r\n                if (response.status !== 200) throw Error(\"Une erreur s'est produite\")\r\n                console.log(this.props.data.id_remark + \" Supprimée\")\r\n                this.props.onDelete()\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"col-12 col-12 tableline\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-1 tablecell\">\r\n                            <Link to={\"/remarks/\" + this.props.data.id_remark}>\r\n                                {this.props.data.id_remark}\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-7 tablecell\">\r\n                            {this.props.data.description_remark}\r\n                        </div>\r\n                        <div className=\"col-2 tablecell\">\r\n                            {this.props.data.pseudo_user}\r\n                        </div>\r\n                        <div className=\"col-2 tablecell\">\r\n                            <button className=\"btn btn-danger m-1\">Supprimer</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default RemarkLine","import React, { Component } from 'react'\r\nimport config from \"../../config/config\"\r\nimport RemarkLine from \"./RemarkLine\"\r\n\r\n\r\nclass ManageRemarks extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            remarks: []\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.fetchAllRemarks()\r\n    }\r\n\r\n    fetchAllRemarks = () => {\r\n\r\n        fetch(config.api + \"/remarks\")\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState(function (state) {\r\n                    return {\r\n                        remarks: result,\r\n                    };\r\n                });\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    render() {\r\n        const remarks = this.state.remarks.map(r => {\r\n            return (\r\n                <RemarkLine key={r.id_remark} data={r} onDelete={this.fetchAllRemarks} />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\" >\r\n                    <div className=\"row table-dark\">\r\n                        <div className=\"col-12 tableline tableline-header\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-1 tablecell\">\r\n                                    Id\r\n                                </div>\r\n                                <div className=\"col-7 tablecell\">\r\n                                    Description\r\n                                </div>\r\n                                <div className=\"col-2 tablecell\">\r\n                                    Auteur\r\n                                </div>\r\n                                <div className=\"col-2 tablecell\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {remarks}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManageRemarks","import React, { Component } from 'react'\r\nimport config from \"../../config/config\"\r\n\r\nclass ResponseTypeLine extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            emoji: \"\"\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            name: this.props.data.name_response_type,\r\n            emoji: this.props.data.emoji_response_type\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        var myHeaders = new Headers();\r\n\r\n        const auth = JSON.parse(localStorage.getItem(\"auth\"))\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + auth.token);\r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    \r\n\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"name_response_type\", this.state.name);\r\n        urlencoded.append(\"emoji_response_type\", this.state.emoji);\r\n\r\n        var requestOptions = {\r\n            method: 'PATCH',\r\n            headers: myHeaders,\r\n             body: urlencoded,\r\n             redirect: 'follow'\r\n        };\r\n\r\n        fetch(config.api + \"/responses_types/\" + this.props.data.id_response_type, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    render() {\r\n        let emoji = this.state.emoji\r\n        try {\r\n            emoji = String.fromCodePoint(emoji)\r\n        } catch {}\r\n        return (\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row tableline\">\r\n                        <div className=\"col-2 tablecell\">\r\n                            {this.props.data.id_response_type}\r\n                        </div>\r\n                        <div className=\"col-4 tablecell\">\r\n                            <input onChange={this.handleChange} value={this.state.name} name={\"name\"}></input>\r\n                        </div>\r\n                        <div className=\"col-3 tablecell\">\r\n                            <input onChange={this.handleChange} value={this.state.emoji} name={\"emoji\"}></input>\r\n                            {emoji}\r\n                        </div>\r\n                        <div className=\"col-3 tablecell\">\r\n                            <button className=\"btn btn-light m-1\">Modifier</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n        )\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default ResponseTypeLine","import React, { Component } from 'react'\r\nimport config from \"../../config/config\"\r\nimport ResponseTypeLine from \"./ResponseTypeLine\"\r\n\r\nclass ManageResponseTypes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            responseTypesList: [],\r\n            name : \"\",\r\n            emoji: \"\"\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.fetchAllResponseTypes()\r\n    }\r\n\r\n    fetchAllResponseTypes = () => {\r\n        fetch(config.api + \"/responses_types\")\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState(function (state) {\r\n                    return {\r\n                        responseTypesList: result\r\n                       \r\n                    };\r\n                });\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        var myHeaders = new Headers();\r\n\r\n        const auth = JSON.parse(localStorage.getItem(\"auth\"))\r\n        myHeaders.append(\"Authorization\", \"Bearer \" + auth.token);\r\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n\r\n        var urlencoded = new URLSearchParams();\r\n        urlencoded.append(\"name_response_type\", this.state.name);\r\n        urlencoded.append(\"emoji_response_type\", this.state.emoji);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: urlencoded,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(config.api + \"/responses_types/\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                this.fetchAllContexts()\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    render() {\r\n        const contexts = this.state.responseTypesList.map(t => {\r\n            return (\r\n                <ResponseTypeLine key={t.id_response_type} data={t} />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\" >\r\n                    <div className=\"row table-dark\">\r\n                        <div className=\"col-12 \">\r\n                            <div className=\"row tableline tableline-header\">\r\n                                <div className=\"col-2 tablecell\">\r\n                                    Id Type\r\n                                </div>\r\n                                <div className=\"col-4 tablecell\">\r\n                                    Nom\r\n                                </div>\r\n                                <div className=\"col-3 tablecell\">\r\n                                    Emoji\r\n                                </div>\r\n                                <div className=\"col-3 tablecell\">\r\n                                    Action\r\n                                </div>\r\n                            </div>\r\n                            {contexts}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"add-remark container d-flex justify-content-center form-row\">\r\n                        <div className=\"d-flex justify-content-start w-100 header\">Ajouter un Type de Réponse</div>\r\n                        <form className=\"add-remark-form d-flex justify-content-center row col-12\" onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-row align-items-top col-12 d-flex justify-content-center \">\r\n\r\n                                <label className=\"col-sm-12 col-md-4 mx-0\">\r\n                                    Nom du type : <br/>\r\n                                <input onChange={this.handleChange} value={this.state.name} name={\"name\"}></input>\r\n                                </label>\r\n\r\n                                <label className=\"col-sm-12 col-md-6 px-0 mx-0\">\r\n                                    Emoji associé : <br/>\r\n                                <input onChange={this.handleChange} value={this.state.emoji} name={\"emoji\"}></input>\r\n                                {this.state.emoji ? String.fromCodePoint(this.state.emoji) : \"\"}\r\n                                </label>\r\n                                <div className=\"col-sm-12 col-md-2 d-flex justify-content-center align-items-center\">\r\n                                    <input className=\"form-control\" type=\"submit\" value=\"Envoyer\" />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n</div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManageResponseTypes","import React, { Component } from 'react';\r\n\r\nimport HomePage from './containers/HomePage'\r\nimport RemarkPage from './containers/RemarkPage'\r\nimport Header from './components/Header'\r\nimport Login from './components/Auth/Login'\r\nimport Notification from './components/utils/Notification'\r\nimport Register from './components/Auth/Register'\r\nimport AdminPanel from './components/Admin/AdminPanel'\r\nimport ManageRemarksContext from \"./components/Admin/ManageRemarksContext\"\r\nimport ManageRemarks from \"./components/Admin/ManageRemarks\"\r\nimport ManageResponseTypes from \"./components/Admin/ManageResponseTypes\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\n/**\r\n * App\r\n */\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      context: \"\",\r\n      notification: \"\",\r\n      notificationType: \"\",\r\n      recherche: \"\"\r\n    }\r\n  }\r\n\r\n  updateNotification = (message, notificationType) => {\r\n    this.setState({\r\n      notification: message,\r\n      notificationType: notificationType\r\n    })\r\n  }\r\n\r\n  filterContext = (value) => {\r\n    this.setState(() => {\r\n      return ({ context: value });\r\n    });\r\n  }\r\n\r\n  handleHomeReturn = () => {\r\n    this.setState(() => {\r\n      return ({\r\n        recherche: \"\",\r\n        context: \"\"\r\n      });\r\n    });\r\n  }\r\n\r\n  handleSearch = (value) => {\r\n    this.setState(() => {\r\n      return ({ recherche: value });\r\n    });\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n\r\n            <Route path=\"/admin\">\r\n              <Header admin={true} />\r\n\r\n              <div className=\"container\">\r\n                <AdminPage />\r\n              </div>\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n\r\n              <Header handleContext={this.filterContext} handleSearch={this.handleSearch} handleHomeReturn={this.handleHomeReturn}/>\r\n              <div className=\"container\">\r\n                {this.state.notification.length > 0 ? <Notification type={this.state.notificationType} content={this.state.notification} /> : \"\"}\r\n\r\n                <Route path=\"/remarks/:id\">\r\n                  <RemarkPageRoute />\r\n                </Route>\r\n\r\n                <Route path=\"/login\">\r\n                  <Login notificationHandler={this.updateNotification} />\r\n                </Route>\r\n\r\n                <Route path=\"/register\">\r\n                  <Register notificationHandler={this.updateNotification} />\r\n                </Route>\r\n\r\n                <Route path=\"/logout\">\r\n                  <LogoutPage notificationHandler={this.updateNotification} />\r\n                </Route>\r\n\r\n                <Route exact path=\"/\">\r\n                  <HomePage notificationHandler={this.updateNotification} context={this.state.context} content={this.state.recherche} />\r\n                </Route>\r\n\r\n              </div>\r\n            </Route>\r\n\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction RemarkPageRoute() {\r\n  let { id } = useParams()\r\n  return (<RemarkPage idRemark={id} />)\r\n}\r\n\r\nfunction LogoutPage(props) {\r\n  localStorage.removeItem(\"auth\")\r\n  props.notificationHandler(\"Vous vous êtes bien déconnecté\", \"success\")\r\n  return <Redirect to={{ pathname: \"/\" }} />\r\n}\r\n\r\nfunction AdminPage() {\r\n  if (localStorage.getItem(\"auth\")) {\r\n    if (JSON.parse(localStorage.getItem(\"auth\")).user.is_admin_user) {\r\n      return (\r\n        <div className=\"admin\">\r\n          <Route path=\"/admin/remarkcontext\">\r\n            <ManageRemarksContext />\r\n          </Route>\r\n          <Route path=\"/admin/responsestypes\">\r\n            <ManageResponseTypes />\r\n          </Route>\r\n          <Route path=\"/admin/remarks\">\r\n           <ManageRemarks/>\r\n          </Route>\r\n          <Route exact path=\"/admin\">\r\n            <AdminPanel />\r\n          </Route>\r\n        </div>\r\n\r\n      )\r\n    }\r\n  }\r\n  return <Redirect to={{ pathname: \"/\" }} />\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}